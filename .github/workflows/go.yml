name: Go

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - id: set-matrix
      run: |
        branchName=$(echo '${{ github.ref }}' | sed 's,refs/heads/,,g')  
        matrix=$(jq --arg branchName "$branchName" 'map(. | select((.runOn==$branchName) or (.runOn=="always")) )' .github/workflows/matrix_includes.json)                
        echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"
  build:
    needs: matrix_prep
    strategy:      
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    name: Build
    runs-on: ${{ matrix.runs_on }}
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      run: go build -v ./...

    - name: Generate coverage report
      continue-on-error: true
      run: |
        go test ./... -coverprofile="coverage.txt" -covermode=atomic      

    - name: Upload coverage report
      uses: codecov/codecov-action@v1.0.15
      if: always()      
      with:
        token:  ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.txt  
        env_vars: OS=${{ matrix.os }}
        fail_ci_if_error: false
        verbose: true
